version: '2'
services:
  web:
    image: 'gitlab/gitlab-ce:latest'
    restart: always
    #
    # Alias is needed for Mattermost
    # to be able to contact Gitlab SSO
    #
    hostname: ${GITLAB_HOSTNAME}
    networks:
      - default
      - frontproxynet
    # Using Traefik
    # https://docs.traefik.io/user-guide/docker-and-lets-encrypt/
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.gitlab.rule=Host(`${GITLAB_HOSTNAME}`)"
      - "traefik.http.routers.gitlab.entrypoints=http"
      - "traefik.http.routers.gitlab.service=gitlab"
      - "traefik.http.middlewares.gitlab-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.gitlab-redirectscheme.redirectscheme.permanent=false"
      - "traefik.http.routers.gitlab.middlewares=gitlab-redirectscheme"

      - "traefik.http.routers.gitlab-secure.rule=Host(`${GITLAB_HOSTNAME}`)"
      - "traefik.http.routers.gitlab-secure.entrypoints=https"
      - "traefik.http.routers.gitlab-secure.service=gitlab"
      - "traefik.http.routers.gitlab-secure.tls=true"

      - "traefik.http.services.gitlab.loadbalancer.server.port=${GITLAB_PORT}"
      - "traefik.http.services.gitlab.loadbalancer.server.scheme=http"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      - "traefik.http.services.gitlab.loadbalancer.passhostheader=true"

      - "traefik.http.routers.registry.rule=Host(`${REGISTRY_HOSTNAME}`)"
      - "traefik.http.routers.registry.entrypoints=http,https"
      - "traefik.http.routers.registry.service=registry"
      - "traefik.http.routers.registry.tls=true"
      - "traefik.http.services.registry.loadbalancer.server.port=${REGISTRY_PORT}"

    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://${GITLAB_HOSTNAME}'
        nginx['redirect_http_to_https'] = false
        nginx['listen_port'] = ${GITLAB_PORT}
        nginx['listen_https'] = false
        #nginx['proxy_set_headers'] = {
        #  'X-Forwarded-Proto' => 'https',
        #  'X-Forwarded-Ssl' => 'on'
        #}
        nginx['client_max_body_size'] = '2G'
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "${SMTP_ADDRESS}"
        gitlab_rails['smtp_port'] = ${SMTP_PORT}
        gitlab_rails['smtp_user_name'] = "${SMTP_USERNAME}"
        gitlab_rails['smtp_password'] = "${SMTP_PASSWORD}"
        gitlab_rails['smtp_domain'] = "${SMTP_DOMAIN}"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['gitlab_email_from'] = 'gitlab-notifications@${SMTP_DOMAIN}'
        gitlab_rails['gitlab_email_display_name'] = 'Gitlab'
        gitlab_rails['gitlab_email_reply_to'] = 'noreply@${SMTP_DOMAIN}'
        unicorn['worker_timeout'] = 60
        unicorn['worker_processes'] = 2
        sidekiq['concurrency'] = 15
        postgresql['shared_buffers'] = "512MB"
        gitlab_rails['artifacts_enabled'] = true
        gitlab_rails['artifacts_path'] = "/var/opt/gitlab/gitlab-artifacts"
        gitlab_rails['lfs_enabled'] = true
        gitlab_rails['backup_keep_time'] = 172600
        gitlab_ci['backup_keep_time'] = 172600
        gitlab_rails['time_zone'] = "${TIMEZONE}"

        #
        # Docker registry
        #
        registry_external_url 'https://${REGISTRY_HOSTNAME}'
        gitlab_rails['registry_enabled'] = true
        registry_nginx['listen_port'] = ${REGISTRY_PORT}
        registry_nginx['listen_https'] = false

        

    ports:
      # Make sure your host 22 port is not already taken by SSH
      # We encourage you to change you host SSH port to reserve it for Gitlab
      - '2222:22'
    volumes:
      - config:/etc/gitlab
      - logs:/var/log/gitlab
      - data:/var/opt/gitlab
      - ./../traefik/ssl:/etc/gitlab/ssl/:ro


networks:
  frontproxynet:
    external: true

volumes:
  config:
  logs:
  data:
